<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.sqli</groupId>
	<artifactId>SQLI_Projet</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>SQLI_Projet</name>
	<description>Demo project for Spring Boot</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.3.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>net.sourceforge.jexcelapi</groupId>
			<artifactId>jxl</artifactId>
			<version>2.6.3</version>
		</dependency>
		<!-- <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-devtools</artifactId> <scope>runtime</scope> 
			</dependency> -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
		  <plugin>
		      <groupId>org.apache.maven.plugins</groupId>
		      <artifactId>maven-war-plugin</artifactId>
		      <configuration>
						<failOnMissingWebXml>false</failOnMissingWebXml>
					</configuration>
		    </plugin>
		    <plugin>
		      <groupId>org.apache.maven.plugins</groupId>
		      <artifactId>maven-war-plugin</artifactId>
		      <version>2.6</version>
		    </plugin>
				  
		  <plugin>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-maven-plugin</artifactId>
			<version>1.5.1.RELEASE</version>
			<configuration>
			  <folders>
				<folder>${basedir}/src/test/resources</folder>
			  </folders>
			  <jvmArguments>
				${jvm.arguments}
			  </jvmArguments>
			</configuration>
			<executions>
			  <execution>
				<goals>
				  <goal>repackage</goal>
				</goals>
			  </execution>
			</executions>
		  </plugin>
		    <!-- Plugin to execute command  "npm install" and "npm run build" inside /static directory -->
		    <plugin>
		      <groupId>com.github.eirslett</groupId>
		      <artifactId>frontend-maven-plugin</artifactId>
		      <version>1.0</version>
		      <configuration>
		        <workingDirectory>${project.basedir}/src/main/webapp/</workingDirectory>
		      </configuration>
		      <executions>
		        <!-- It will install nodejs and npm 		-->
		        <execution>
		          <id>install node and npm</id>
		          <goals>
		            <goal>install-node-and-npm</goal>
		          </goals>
		          <configuration>
		            <nodeVersion>v6.10.2</nodeVersion>
		            <npmVersion>3.9.5</npmVersion>
		          </configuration>
		        </execution>

		        <!-- It will execute command "npm install" inside "/static" directory 		-->
		        <execution>
		          <id>npm install</id>
		          <goals>
		            <goal>npm</goal>
		          </goals>
		          <configuration>
		            <arguments>install</arguments>
		          </configuration>
		        </execution>

		        <!-- It will execute command "npm build" inside "/static" directory to clean and create "/dist" directory-->
		        <execution>
		          <id>npm build</id>
		          <goals>
		            <goal>npm</goal>
		          </goals>
		          <configuration>
		            <arguments>run start</arguments>
		          </configuration>
		        </execution>
		      </executions>
		    </plugin>
		
		    <!-- Plugin to copy the content of /static/dist/ directory to output directory (ie/ /target/transactionManager-1.0/) -->
		    <plugin>
		      <groupId>org.apache.maven.plugins</groupId>
		      <artifactId>maven-resources-plugin</artifactId>
		      <version>2.4.2</version>
		      <executions>
		        <execution>
		          <id>default-copy-resources</id>
		          <phase>process-resources</phase>
		          <goals>
		            <goal>copy-resources</goal>
		          </goals>
		          <configuration>
		            <overwrite>true</overwrite>
		            <outputDirectory>${project.build.directory}/${project.artifactId}-${project.version}/</outputDirectory>
		            <resources>
		              <resource>
		                <directory>${project.basedir}/src/main/resources/build</directory>
		              </resource>
		            </resources>
		          </configuration>
		        </execution>
		      </executions>
		    </plugin>
		  <plugin>
			<groupId>org.codehaus.gmaven</groupId>
			<artifactId>gmaven-plugin</artifactId>
			<version>1.4</version>
			<configuration>
			  <source/>
			  <providerSelection>2.0</providerSelection>
			</configuration>
			<executions>
			   <execution>
				<goals>
				  <goal>compile</goal>
				  <goal>testCompile</goal>
				</goals>
			  </execution>
			</executions>
			<dependencies>
			  <dependency>
				<groupId>org.codehaus.gmaven.runtime</groupId>
				<artifactId>gmaven-runtime-2.0</artifactId>
				<version>1.4</version>
			  </dependency>
			</dependencies>
		  </plugin>

		</plugins>
	  </build>


</project>
